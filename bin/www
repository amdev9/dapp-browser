const app = require("../app");
const debug = require("debug")("express:server");
const http = require("http");
const logger = require("morgan");

const port = normalizePort(process.env.PORT || 33888);
app.set("port", port);
app.use(logger('dev'));
 
const server = http.createServer(app);

server.on("error", onError);
server.on("listening", onListening);
server.listen(port, () => {
  console.log("Start listenning server");
});

function normalizePort(value) {
  const port = parseInt(value, 10);

  if (isNaN(port)) return value; // named pipe
  if (port >= 0) return port; // port number

  return false;
}

function onError(error) {
  if (error.syscall !== "listen") throw error;

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;

  debug("Listening on " + bind);
}
